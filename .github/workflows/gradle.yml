# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation!
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution times
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5
        
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Build with Gradle Wrapper
        run: ./gradlew build
        
      - name: Build Docker image
        run: docker build -t jwt .
        
      - name: Save Docker image
        run: docker save jwt | gzip > jwt.tar.gz
        
      - name: Upload Docker image to EC2
        uses: appleboy/scp-action@v0.1.7
        
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_SSH_KEY }}
          port: 22
          source: "jwt.tar.gz"
          target: "/home/ubuntu"
          
      - name: Deploy Docker image on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_SSH_KEY }}
          port: 22
          script: |
            docker load < jwt.tar.gz
            docker stop jwt || true
            docker rm jwt || true
            docker run -d -p 8090:8090 jwt

